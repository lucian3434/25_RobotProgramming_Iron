import rclpy
from rclpy.node import Node
from sensor_msgs.msg import LaserScan

class ScanSubscriber(Node):
    def __init__(self):
        super().__init__('scan_subscriber')
        self.subscription = self.create_subscription(
            LaserScan,
            '/scan',
            self.listener_callback,
            10)
        self.publisher_ = self.create_publisher(LaserScan, '/downsampled_scan', 10)

    def listener_callback(self, msg):
        # self.get_logger().info("listener_callback")
        thinned_scan = LaserScan()
        thinned_scan.header = msg.header
        thinned_scan.angle_min = msg.angle_min
        thinned_scan.angle_max = msg.angle_max
        thinned_scan.angle_increment = msg.angle_increment * 2
        thinned_scan.time_increment = msg.time_increment * 2
        thinned_scan.scan_time = msg.scan_time
        thinned_scan.range_min = msg.range_min
        thinned_scan.range_max = msg.range_max
        thinned_scan.ranges = msg.ranges[::2]
        thinned_scan.intensities = msg.intensities[::2]
        self.publisher_.publish(thinned_scan)

def main(args=None):
    rclpy.init(args=args)
    scan_subscriber = ScanSubscriber()
    rclpy.spin(scan_subscriber)
    scan_subscriber.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()
