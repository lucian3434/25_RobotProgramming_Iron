import rclpy
from rclpy.node import Node
from sensor_msgs.msg import LaserScan
from rclpy.qos import QoSProfile, QoSHistoryPolicy, QoSReliabilityPolicy

class LaserDownsample(Node):
    def __init__(self):
        super().__init__('laser_downsample')
        qos_profile = QoSProfile(
            history=QoSHistoryPolicy.KEEP_LAST,
            depth=10,
            reliability=QoSReliabilityPolicy.BEST_EFFORT)
        self.sub = self.create_subscription(LaserScan, '/scan', self.callback, qos_profile)
        self.pub = self.create_publisher(LaserScan, '/downsampled_scan', 10)

    def callback(self, data):
        new_data = data
        new_data.ranges = data.ranges[::2]
        self.pub.publish(new_data)

def main(args=None):
    rclpy.init(args=args)
    node = LaserDownsample()
    rclpy.spin(node)
    node.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()
